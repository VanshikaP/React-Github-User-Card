{"ast":null,"code":"\"use strict\";\n\nvar parse = require(\"github-calendar-parser\"),\n    $ = require(\"elly\"),\n    addSubtractDate = require(\"add-subtract-date\"),\n    formatoid = require(\"formatoid\");\n\nvar DATE_FORMAT1 = \"MMM D, YYYY\",\n    DATE_FORMAT2 = \"MMMM D\";\n\nfunction printDayCount(dayCount) {\n  return dayCount + \" \" + (dayCount === 1 ? \"day\" : \"days\");\n}\n/**\n * GitHubCalendar\n * Brings the contributions calendar from GitHub (provided username) into your page.\n *\n * @name GitHubCalendar\n * @function\n * @param {String|HTMLElement} container The calendar container (query selector or the element itself).\n * @param {String} username The GitHub username.\n * @param {Object} options An object containing the following fields:\n *\n *    - `summary_text` (String): The text that appears under the calendar (defaults to: `\"Summary of\n *      pull requests, issues opened, and commits made by <username>\"`).\n *    - `proxy` (Function): A function that receives as argument an url (string) and should return the proxied url.\n *      The default is using [@izuzak](https://github.com/izuzak)'s [`urlreq`](https://github.com/izuzak/urlreq).\n *    - `global_stats` (Boolean): If `false`, the global stats (total, longest and current streaks) will not be calculated and displayed. By default this is enabled.\n *    - `responsive` (Boolean): If `true`, the graph is changed to scale with the container. Custom CSS should be applied to the element to scale it appropriately. By default this is disabled.\n *\n * @return {Promise} A promise returned by the `fetch()` call.\n */\n\n\nmodule.exports = function GitHubCalendar(container, username, options) {\n  container = $(container);\n  options = options || {};\n  options.summary_text = options.summary_text || \"Summary of pull requests, issues opened, and commits made by <a href=\\\"https://github.com/\" + username + \"\\\" target=\\\"blank\\\">@\" + username + \"</a>\";\n\n  if (options.global_stats === false) {\n    container.style.minHeight = \"175px\";\n  } // We need a proxy for CORS\n  // Thanks, @izuzak (https://github.com/izuzak/urlreq)\n\n\n  options.proxy = options.proxy || function (url) {\n    return \"https://urlreq.appspot.com/req?method=GET&url=\" + url;\n  };\n\n  var fetchCalendar = function fetchCalendar() {\n    return fetch(options.proxy(\"https://github.com/users/\" + username + \"/contributions\")).then(function (response) {\n      return response.text();\n    }).then(function (body) {\n      var div = document.createElement(\"div\");\n      div.innerHTML = body;\n      var cal = div.querySelector(\".js-yearly-contributions\");\n      $(\".position-relative h2\", cal).remove();\n      cal.querySelector(\".float-left.text-gray\").innerHTML = options.summary_text; // If 'include-fragment' with spinner img loads instead of the svg, fetchCalendar again\n\n      if (cal.querySelector(\"include-fragment\")) {\n        setTimeout(fetchCalendar, 500);\n      } else {\n        // If options includes responsive, SVG element has to be manipulated to be made responsive\n        if (options.responsive === true) {\n          var svg = cal.querySelector(\"svg.js-calendar-graph-svg\"); // Get the width/height properties and use them to create the viewBox\n\n          var width = svg.getAttribute(\"width\");\n          var height = svg.getAttribute(\"height\"); // Remove height property entirely\n\n          svg.removeAttribute(\"height\"); // Width property should be set to 100% to fill entire container\n\n          svg.setAttribute(\"width\", \"100%\"); // Add a viewBox property based on the former width/height\n\n          svg.setAttribute(\"viewBox\", \"0 0 \" + width + \" \" + height);\n        }\n\n        if (options.global_stats !== false) {\n          var parsed = parse($(\"svg\", cal).outerHTML),\n              currentStreakInfo = parsed.current_streak ? formatoid(parsed.current_streak_range[0], DATE_FORMAT2) + \" &ndash; \" + formatoid(parsed.current_streak_range[1], DATE_FORMAT2) : parsed.last_contributed ? \"Last contributed in \" + formatoid(parsed.last_contributed, DATE_FORMAT2) + \".\" : \"Rock - Hard Place\",\n              longestStreakInfo = parsed.longest_streak ? formatoid(parsed.longest_streak_range[0], DATE_FORMAT2) + \" &ndash; \" + formatoid(parsed.longest_streak_range[1], DATE_FORMAT2) : parsed.last_contributed ? \"Last contributed in \" + formatoid(parsed.last_contributed, DATE_FORMAT2) + \".\" : \"Rock - Hard Place\",\n              firstCol = $(\"<div>\", {\n            \"class\": \"contrib-column contrib-column-first table-column\",\n            html: \"<span class=\\\"text-muted\\\">Contributions in the last year</span>\\n                               <span class=\\\"contrib-number\\\">\" + parsed.last_year + \" total</span>\\n                               <span class=\\\"text-muted\\\">\" + formatoid(addSubtractDate.add(addSubtractDate.subtract(new Date(), 1, \"year\"), 1, \"day\"), DATE_FORMAT1) + \" &ndash; \" + formatoid(new Date(), DATE_FORMAT1) + \"</span>\"\n          }),\n              secondCol = $(\"<div>\", {\n            \"class\": \"contrib-column table-column\",\n            html: \"<span class=\\\"text-muted\\\">Longest streak</span>\\n                               <span class=\\\"contrib-number\\\">\" + printDayCount(parsed.longest_streak) + \"</span>\\n                               <span class=\\\"text-muted\\\">\" + longestStreakInfo + \"</span>\"\n          }),\n              thirdCol = $(\"<div>\", {\n            \"class\": \"contrib-column table-column\",\n            html: \"<span class=\\\"text-muted\\\">Current streak</span>\\n                               <span class=\\\"contrib-number\\\">\" + printDayCount(parsed.current_streak) + \"</span>\\n                               <span class=\\\"text-muted\\\">\" + currentStreakInfo + \"</span>\"\n          });\n          cal.appendChild(firstCol);\n          cal.appendChild(secondCol);\n          cal.appendChild(thirdCol);\n        }\n\n        container.innerHTML = cal.innerHTML;\n      }\n    }).catch(function (e) {\n      return console.error(e);\n    });\n  };\n\n  return fetchCalendar();\n};","map":{"version":3,"sources":["/Users/vanshika/Desktop/Lambda/React-Github-User-Card/github-app/node_modules/github-calendar/lib/index.js"],"names":["parse","require","$","addSubtractDate","formatoid","DATE_FORMAT1","DATE_FORMAT2","printDayCount","dayCount","module","exports","GitHubCalendar","container","username","options","summary_text","global_stats","style","minHeight","proxy","url","fetchCalendar","fetch","then","response","text","body","div","document","createElement","innerHTML","cal","querySelector","remove","setTimeout","responsive","svg","width","getAttribute","height","removeAttribute","setAttribute","parsed","outerHTML","currentStreakInfo","current_streak","current_streak_range","last_contributed","longestStreakInfo","longest_streak","longest_streak_range","firstCol","html","last_year","add","subtract","Date","secondCol","thirdCol","appendChild","catch","e","console","error"],"mappings":"AAAA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,wBAAD,CAAnB;AAAA,IACIC,CAAC,GAAGD,OAAO,CAAC,MAAD,CADf;AAAA,IAEIE,eAAe,GAAGF,OAAO,CAAC,mBAAD,CAF7B;AAAA,IAGIG,SAAS,GAAGH,OAAO,CAAC,WAAD,CAHvB;;AAKA,IAAII,YAAY,GAAG,aAAnB;AAAA,IACIC,YAAY,GAAG,QADnB;;AAGA,SAASC,aAAT,CAAuBC,QAAvB,EAAiC;AAC7B,SAAOA,QAAQ,GAAG,GAAX,IAAkBA,QAAQ,KAAK,CAAb,GAAiB,KAAjB,GAAyB,MAA3C,CAAP;AACH;AAED;;;;;;;;;;;;;;;;;;;;;AAmBAC,MAAM,CAACC,OAAP,GAAiB,SAASC,cAAT,CAAwBC,SAAxB,EAAmCC,QAAnC,EAA6CC,OAA7C,EAAsD;AAEnEF,EAAAA,SAAS,GAAGV,CAAC,CAACU,SAAD,CAAb;AAEAE,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACAA,EAAAA,OAAO,CAACC,YAAR,GAAuBD,OAAO,CAACC,YAAR,IAAwB,+FAA+FF,QAA/F,GAA0G,uBAA1G,GAAoIA,QAApI,GAA+I,MAA9L;;AAEA,MAAIC,OAAO,CAACE,YAAR,KAAyB,KAA7B,EAAoC;AAChCJ,IAAAA,SAAS,CAACK,KAAV,CAAgBC,SAAhB,GAA4B,OAA5B;AACH,GATkE,CAWnE;AACA;;;AACAJ,EAAAA,OAAO,CAACK,KAAR,GAAgBL,OAAO,CAACK,KAAR,IAAiB,UAAUC,GAAV,EAAe;AAC5C,WAAO,mDAAmDA,GAA1D;AACH,GAFD;;AAIA,MAAIC,aAAa,GAAG,SAASA,aAAT,GAAyB;AACzC,WAAOC,KAAK,CAACR,OAAO,CAACK,KAAR,CAAc,8BAA8BN,QAA9B,GAAyC,gBAAvD,CAAD,CAAL,CAAgFU,IAAhF,CAAqF,UAAUC,QAAV,EAAoB;AAC5G,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,KAFM,EAEJF,IAFI,CAEC,UAAUG,IAAV,EAAgB;AACpB,UAAIC,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAV;AACAF,MAAAA,GAAG,CAACG,SAAJ,GAAgBJ,IAAhB;AACA,UAAIK,GAAG,GAAGJ,GAAG,CAACK,aAAJ,CAAkB,0BAAlB,CAAV;AACA9B,MAAAA,CAAC,CAAC,uBAAD,EAA0B6B,GAA1B,CAAD,CAAgCE,MAAhC;AACAF,MAAAA,GAAG,CAACC,aAAJ,CAAkB,uBAAlB,EAA2CF,SAA3C,GAAuDhB,OAAO,CAACC,YAA/D,CALoB,CAOpB;;AACA,UAAIgB,GAAG,CAACC,aAAJ,CAAkB,kBAAlB,CAAJ,EAA2C;AACvCE,QAAAA,UAAU,CAACb,aAAD,EAAgB,GAAhB,CAAV;AACH,OAFD,MAEO;AACH;AACA,YAAIP,OAAO,CAACqB,UAAR,KAAuB,IAA3B,EAAiC;AAC7B,cAAIC,GAAG,GAAGL,GAAG,CAACC,aAAJ,CAAkB,2BAAlB,CAAV,CAD6B,CAE7B;;AACA,cAAIK,KAAK,GAAGD,GAAG,CAACE,YAAJ,CAAiB,OAAjB,CAAZ;AACA,cAAIC,MAAM,GAAGH,GAAG,CAACE,YAAJ,CAAiB,QAAjB,CAAb,CAJ6B,CAK7B;;AACAF,UAAAA,GAAG,CAACI,eAAJ,CAAoB,QAApB,EAN6B,CAO7B;;AACAJ,UAAAA,GAAG,CAACK,YAAJ,CAAiB,OAAjB,EAA0B,MAA1B,EAR6B,CAS7B;;AACAL,UAAAA,GAAG,CAACK,YAAJ,CAAiB,SAAjB,EAA4B,SAASJ,KAAT,GAAiB,GAAjB,GAAuBE,MAAnD;AACH;;AAED,YAAIzB,OAAO,CAACE,YAAR,KAAyB,KAA7B,EAAoC;AAChC,cAAI0B,MAAM,GAAG1C,KAAK,CAACE,CAAC,CAAC,KAAD,EAAQ6B,GAAR,CAAD,CAAcY,SAAf,CAAlB;AAAA,cACIC,iBAAiB,GAAGF,MAAM,CAACG,cAAP,GAAwBzC,SAAS,CAACsC,MAAM,CAACI,oBAAP,CAA4B,CAA5B,CAAD,EAAiCxC,YAAjC,CAAT,GAA0D,WAA1D,GAAwEF,SAAS,CAACsC,MAAM,CAACI,oBAAP,CAA4B,CAA5B,CAAD,EAAiCxC,YAAjC,CAAzG,GAA0JoC,MAAM,CAACK,gBAAP,GAA0B,yBAAyB3C,SAAS,CAACsC,MAAM,CAACK,gBAAR,EAA0BzC,YAA1B,CAAlC,GAA4E,GAAtG,GAA4G,mBAD9R;AAAA,cAEI0C,iBAAiB,GAAGN,MAAM,CAACO,cAAP,GAAwB7C,SAAS,CAACsC,MAAM,CAACQ,oBAAP,CAA4B,CAA5B,CAAD,EAAiC5C,YAAjC,CAAT,GAA0D,WAA1D,GAAwEF,SAAS,CAACsC,MAAM,CAACQ,oBAAP,CAA4B,CAA5B,CAAD,EAAiC5C,YAAjC,CAAzG,GAA0JoC,MAAM,CAACK,gBAAP,GAA0B,yBAAyB3C,SAAS,CAACsC,MAAM,CAACK,gBAAR,EAA0BzC,YAA1B,CAAlC,GAA4E,GAAtG,GAA4G,mBAF9R;AAAA,cAGI6C,QAAQ,GAAGjD,CAAC,CAAC,OAAD,EAAU;AACtB,qBAAS,kDADa;AAEtBkD,YAAAA,IAAI,EAAE,qIAAqIV,MAAM,CAACW,SAA5I,GAAwJ,2EAAxJ,GAAsOjD,SAAS,CAACD,eAAe,CAACmD,GAAhB,CAAoBnD,eAAe,CAACoD,QAAhB,CAAyB,IAAIC,IAAJ,EAAzB,EAAqC,CAArC,EAAwC,MAAxC,CAApB,EAAqE,CAArE,EAAwE,KAAxE,CAAD,EAAiFnD,YAAjF,CAA/O,GAAgV,WAAhV,GAA8VD,SAAS,CAAC,IAAIoD,IAAJ,EAAD,EAAanD,YAAb,CAAvW,GAAoY;AAFpX,WAAV,CAHhB;AAAA,cAOIoD,SAAS,GAAGvD,CAAC,CAAC,OAAD,EAAU;AACvB,qBAAS,6BADc;AAEvBkD,YAAAA,IAAI,EAAE,qHAAqH7C,aAAa,CAACmC,MAAM,CAACO,cAAR,CAAlI,GAA4J,qEAA5J,GAAoOD,iBAApO,GAAwP;AAFvO,WAAV,CAPjB;AAAA,cAWIU,QAAQ,GAAGxD,CAAC,CAAC,OAAD,EAAU;AACtB,qBAAS,6BADa;AAEtBkD,YAAAA,IAAI,EAAE,qHAAqH7C,aAAa,CAACmC,MAAM,CAACG,cAAR,CAAlI,GAA4J,qEAA5J,GAAoOD,iBAApO,GAAwP;AAFxO,WAAV,CAXhB;AAgBAb,UAAAA,GAAG,CAAC4B,WAAJ,CAAgBR,QAAhB;AACApB,UAAAA,GAAG,CAAC4B,WAAJ,CAAgBF,SAAhB;AACA1B,UAAAA,GAAG,CAAC4B,WAAJ,CAAgBD,QAAhB;AACH;;AAED9C,QAAAA,SAAS,CAACkB,SAAV,GAAsBC,GAAG,CAACD,SAA1B;AACH;AACJ,KAnDM,EAmDJ8B,KAnDI,CAmDE,UAAUC,CAAV,EAAa;AAClB,aAAOC,OAAO,CAACC,KAAR,CAAcF,CAAd,CAAP;AACH,KArDM,CAAP;AAsDH,GAvDD;;AAyDA,SAAOxC,aAAa,EAApB;AACH,CA3ED","sourcesContent":["\"use strict\";\n\nvar parse = require(\"github-calendar-parser\"),\n    $ = require(\"elly\"),\n    addSubtractDate = require(\"add-subtract-date\"),\n    formatoid = require(\"formatoid\");\n\nvar DATE_FORMAT1 = \"MMM D, YYYY\",\n    DATE_FORMAT2 = \"MMMM D\";\n\nfunction printDayCount(dayCount) {\n    return dayCount + \" \" + (dayCount === 1 ? \"day\" : \"days\");\n}\n\n/**\n * GitHubCalendar\n * Brings the contributions calendar from GitHub (provided username) into your page.\n *\n * @name GitHubCalendar\n * @function\n * @param {String|HTMLElement} container The calendar container (query selector or the element itself).\n * @param {String} username The GitHub username.\n * @param {Object} options An object containing the following fields:\n *\n *    - `summary_text` (String): The text that appears under the calendar (defaults to: `\"Summary of\n *      pull requests, issues opened, and commits made by <username>\"`).\n *    - `proxy` (Function): A function that receives as argument an url (string) and should return the proxied url.\n *      The default is using [@izuzak](https://github.com/izuzak)'s [`urlreq`](https://github.com/izuzak/urlreq).\n *    - `global_stats` (Boolean): If `false`, the global stats (total, longest and current streaks) will not be calculated and displayed. By default this is enabled.\n *    - `responsive` (Boolean): If `true`, the graph is changed to scale with the container. Custom CSS should be applied to the element to scale it appropriately. By default this is disabled.\n *\n * @return {Promise} A promise returned by the `fetch()` call.\n */\nmodule.exports = function GitHubCalendar(container, username, options) {\n\n    container = $(container);\n\n    options = options || {};\n    options.summary_text = options.summary_text || \"Summary of pull requests, issues opened, and commits made by <a href=\\\"https://github.com/\" + username + \"\\\" target=\\\"blank\\\">@\" + username + \"</a>\";\n\n    if (options.global_stats === false) {\n        container.style.minHeight = \"175px\";\n    }\n\n    // We need a proxy for CORS\n    // Thanks, @izuzak (https://github.com/izuzak/urlreq)\n    options.proxy = options.proxy || function (url) {\n        return \"https://urlreq.appspot.com/req?method=GET&url=\" + url;\n    };\n\n    var fetchCalendar = function fetchCalendar() {\n        return fetch(options.proxy(\"https://github.com/users/\" + username + \"/contributions\")).then(function (response) {\n            return response.text();\n        }).then(function (body) {\n            var div = document.createElement(\"div\");\n            div.innerHTML = body;\n            var cal = div.querySelector(\".js-yearly-contributions\");\n            $(\".position-relative h2\", cal).remove();\n            cal.querySelector(\".float-left.text-gray\").innerHTML = options.summary_text;\n\n            // If 'include-fragment' with spinner img loads instead of the svg, fetchCalendar again\n            if (cal.querySelector(\"include-fragment\")) {\n                setTimeout(fetchCalendar, 500);\n            } else {\n                // If options includes responsive, SVG element has to be manipulated to be made responsive\n                if (options.responsive === true) {\n                    var svg = cal.querySelector(\"svg.js-calendar-graph-svg\");\n                    // Get the width/height properties and use them to create the viewBox\n                    var width = svg.getAttribute(\"width\");\n                    var height = svg.getAttribute(\"height\");\n                    // Remove height property entirely\n                    svg.removeAttribute(\"height\");\n                    // Width property should be set to 100% to fill entire container\n                    svg.setAttribute(\"width\", \"100%\");\n                    // Add a viewBox property based on the former width/height\n                    svg.setAttribute(\"viewBox\", \"0 0 \" + width + \" \" + height);\n                }\n\n                if (options.global_stats !== false) {\n                    var parsed = parse($(\"svg\", cal).outerHTML),\n                        currentStreakInfo = parsed.current_streak ? formatoid(parsed.current_streak_range[0], DATE_FORMAT2) + \" &ndash; \" + formatoid(parsed.current_streak_range[1], DATE_FORMAT2) : parsed.last_contributed ? \"Last contributed in \" + formatoid(parsed.last_contributed, DATE_FORMAT2) + \".\" : \"Rock - Hard Place\",\n                        longestStreakInfo = parsed.longest_streak ? formatoid(parsed.longest_streak_range[0], DATE_FORMAT2) + \" &ndash; \" + formatoid(parsed.longest_streak_range[1], DATE_FORMAT2) : parsed.last_contributed ? \"Last contributed in \" + formatoid(parsed.last_contributed, DATE_FORMAT2) + \".\" : \"Rock - Hard Place\",\n                        firstCol = $(\"<div>\", {\n                        \"class\": \"contrib-column contrib-column-first table-column\",\n                        html: \"<span class=\\\"text-muted\\\">Contributions in the last year</span>\\n                               <span class=\\\"contrib-number\\\">\" + parsed.last_year + \" total</span>\\n                               <span class=\\\"text-muted\\\">\" + formatoid(addSubtractDate.add(addSubtractDate.subtract(new Date(), 1, \"year\"), 1, \"day\"), DATE_FORMAT1) + \" &ndash; \" + formatoid(new Date(), DATE_FORMAT1) + \"</span>\"\n                    }),\n                        secondCol = $(\"<div>\", {\n                        \"class\": \"contrib-column table-column\",\n                        html: \"<span class=\\\"text-muted\\\">Longest streak</span>\\n                               <span class=\\\"contrib-number\\\">\" + printDayCount(parsed.longest_streak) + \"</span>\\n                               <span class=\\\"text-muted\\\">\" + longestStreakInfo + \"</span>\"\n                    }),\n                        thirdCol = $(\"<div>\", {\n                        \"class\": \"contrib-column table-column\",\n                        html: \"<span class=\\\"text-muted\\\">Current streak</span>\\n                               <span class=\\\"contrib-number\\\">\" + printDayCount(parsed.current_streak) + \"</span>\\n                               <span class=\\\"text-muted\\\">\" + currentStreakInfo + \"</span>\"\n                    });\n\n                    cal.appendChild(firstCol);\n                    cal.appendChild(secondCol);\n                    cal.appendChild(thirdCol);\n                }\n\n                container.innerHTML = cal.innerHTML;\n            }\n        }).catch(function (e) {\n            return console.error(e);\n        });\n    };\n\n    return fetchCalendar();\n};"]},"metadata":{},"sourceType":"script"}